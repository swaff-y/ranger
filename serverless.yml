service: ranger-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: ruby3.2
  region: ap-southeast-2
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 30
  environment:
    STAGE: ${self:provider.stage}
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}-table
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
          Resource:
            - arn:aws:sqs:${self:provider.region}:*:${self:service}-${self:provider.stage}-dlq

functions:
  rangerApi:
    handler: lib/lambda/handler.process
    description: API status endpoint handler
    events:
      - http:
          path: api/v1/status
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
    deadLetter:
      targetArn:
        Fn::GetAtt:
          - DeadLetterQueue
          - Arn

resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        Tags:
          - Key: Service
            Value: ${self:service}
          - Key: Stage
            Value: ${self:provider.stage}

    DeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-dlq
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        Tags:
          - Key: Service
            Value: ${self:service}
          - Key: Stage
            Value: ${self:provider.stage}

  Outputs:
    DynamoDBTableName:
      Description: DynamoDB table name
      Value:
        Ref: DynamoDBTable

    DynamoDBTableArn:
      Description: DynamoDB table ARN
      Value:
        Fn::GetAtt:
          - DynamoDBTable
          - Arn

    DeadLetterQueueUrl:
      Description: Dead Letter Queue URL
      Value:
        Ref: DeadLetterQueue

    DeadLetterQueueArn:
      Description: Dead Letter Queue ARN
      Value:
        Fn::GetAtt:
          - DeadLetterQueue
          - Arn
